[{"categories":null,"content":"영상 ","date":"2020-11-11","objectID":"/variableandconstants/:1:0","tags":null,"title":"Variable and Constants","uri":"/variableandconstants/"},{"categories":null,"content":"영상 ","date":"2020-11-11","objectID":"/packagesandimports/:1:0","tags":null,"title":"Packages and Imports","uri":"/packagesandimports/"},{"categories":null,"content":"패키지 main.go 에서 Hello World 를 출력할 때 fmt.Println 으로 출력했었다. fmt 는 format 을 위한 패키지다. 그런데 왜 Println 은 첫글자가 대문자일까? ","date":"2020-11-11","objectID":"/packagesandimports/:2:0","tags":null,"title":"Packages and Imports","uri":"/packagesandimports/"},{"categories":null,"content":"Import 파이썬, 자바, 자바스크립트 등에서는 무언가를 import 할때 맨 위에 import 000 from 000 형식으로 import 해온다. 또 node.js 나 자바스크립트 같은것에서는 모듈을 export 해야한다. Go 에서는, function을 export 해주고 싶다면, function 을 대문자로 시작하면 된다. 또 import 받는 쪽에서도 첫글자가 대문자로 인식된다. 그러니까 첫글자가 대문자인 function 들은 다른곳에서 import 된거라고 보면 된다. ","date":"2020-11-11","objectID":"/packagesandimports/:3:0","tags":null,"title":"Packages and Imports","uri":"/packagesandimports/"},{"categories":null,"content":"영상 main.go 를 만들었다. 중요\r\rgo 프로젝트를 컴파일 하고 싶다면 파일 이름을 main.go 로 해야한다. example.go 같은 경우에는 컴파일이 되지 않는다.\r\r main.go 의 맨 윗줄에 package main 이라고 작성한다. Go 에서는 어떤 패키지를 사용하는지 알려주어야 한다. 또 Node.js 나 Python 과 달리 특정한 function 을 찾는다. package main func main() { } ","date":"2020-11-11","objectID":"/go-helloworld/:1:0","tags":null,"title":"Hello World","uri":"/go-helloworld/"},{"categories":null,"content":"Hello World Hello World 를 프린트해보자. function 안에 fmt.Println('Hello World!')를 쓴 뒤 package 뒤에 import “fmt” 를 쓴다. fmt 가 뭔지는 다음에. package main import \"fmt\" func main() { fmt.Println(\"Hello World!\") } go run main.go 로 작동시켜보면 PS C:\\Go\\PJCT\u003e go run main.go Hello World! 잘 작동한다! ","date":"2020-11-11","objectID":"/go-helloworld/:2:0","tags":null,"title":"Hello World","uri":"/go-helloworld/"},{"categories":null,"content":"\r","date":"2020-11-09","objectID":"/about/:0:0","tags":null,"title":"About","uri":"/about/"},{"categories":null,"content":"영상 ","date":"2020-11-07","objectID":"/go-installation/:1:0","tags":null,"title":"Installation","uri":"/go-installation/"},{"categories":null,"content":"Go 다운받기 https://golang.org/ 로 접속한다. 리눅스라면 sudo apt install go sudo dnf install go yay -S go sudo pacman -S go aur 주소\r\rhttps://www.archlinux.org/packages/community/x86_64/go/\r\r 맥은 brew install golang 하면 될거고 윈도우는 choco install go 하면 될듯 ","date":"2020-11-07","objectID":"/go-installation/:2:0","tags":null,"title":"Installation","uri":"/go-installation/"},{"categories":null,"content":"환경변수 추가 맥 mkdir -p $HOME/go/{bin,src,pkg} export GOPATH=$HOME/go export GOROOT=\"$(brew --prefix golang)/libexec\" export PATH=\"$PATH:${GOPATH}/bin:${GOROOT}/bin\" https://medium.com/@jimkang/install-go-on-mac-with-homebrew-5fa421fc55f5 윈도우는 Path 에 Go 를 설치한 폴더가 들어있으면 된다. Note\r\rGo 는 Go 의 Path 가 설치된 곳에서만 작동한다. 원하는 곳에 폴더를 만들어서 작업할 수 없다는 소리다. 자동적으로 생성되는 Go Path 디렉토리는 C:\\Go 지만 환경변수를 수정해 D 드라이브로 바꿨다. 그래서 C:\\Go 안의 특정 폴더 안에서 작업을 해야 한다.\r\r Go 는 Node.js 나 Python 같이 모듈이나 패키지를 다운받을 수 있는곳이 제한적이다. npm 이나 pypi 등등. Go 는 그런거 없다. 그렇기 때문에 코드를 다운받을, 업로드 할 도메인으로 깔끔하게 정리한다. src 안에 자신의 깃허브 주소로 디렉터리를 만들고 프로젝트 이름으로 디렉터리를 만든다. 그리고 그 안에 main.go 를 생성하고 vscode 로 열면 install 같은게 많이 나올텐데 모두 하면 된다. ","date":"2020-11-07","objectID":"/go-installation/:3:0","tags":null,"title":"Installation","uri":"/go-installation/"},{"categories":null,"content":"영상 이 글은 나 혼자 보려고 노마드코더의 GO 강의를 문서화 시킨 것이다. 나중에 까먹거나 할때 즈음에 다시 훑어보면서 되짚어볼 생각이다. 영상에서는 다른 언어 부터 배우고 오는게 좋다고 했지만, 나는 거의 안배우고 바로 GO로 들어갔다. 모아보기 링크 ","date":"2020-11-07","objectID":"/go-introduction/:1:0","tags":null,"title":"Introduction","uri":"/go-introduction/"},{"categories":null,"content":"만들었다 히히 \r","date":"2020-11-07","objectID":"/first/:0:0","tags":null,"title":"First.md","uri":"/first/"}]